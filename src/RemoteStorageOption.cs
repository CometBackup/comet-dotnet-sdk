// AUTOGENERATED, DO NOT EDIT

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace CometBackup.CometAPI.SDK {
/// <summary>
/// Class <c>RemoteStorageOption</c>
/// </summary>
public class RemoteStorageOption {
	public string Type { get; set; } = "";
	public string Description { get; set; } = "";
	public string RemoteAddress { get; set; } = "";
	public string Username { get; set; } = "";
	public string Password { get; set; } = "";
	public ExternalLDAPAuthenticationSourceSettings LDAP { get; set; } = new ExternalLDAPAuthenticationSourceSettings();
	public B2VirtualStorageRoleSettings B2 { get; set; } = new B2VirtualStorageRoleSettings();
	public WasabiVirtualStorageRoleSettings Wasabi { get; set; } = new WasabiVirtualStorageRoleSettings();
	public CustomRemoteBucketSettings Custom { get; set; } = new CustomRemoteBucketSettings();
	public S3GenericVirtualStorageRole S3 { get; set; } = new S3GenericVirtualStorageRole();
	public AmazonAWSVirtualStorageRoleSettings AWS { get; set; } = new AmazonAWSVirtualStorageRoleSettings();
	public StorjVirtualStorageRoleSetting Storj { get; set; } = new StorjVirtualStorageRoleSetting();
	public bool StorageLimitEnabled { get; set; }
	public long StorageLimitBytes { get; set; }
	public bool RebrandStorage { get; set; }

	public RemoteStorageOption(){ }

	public string ToJson() {
		return JsonSerializer.Serialize(this);
	}

	static public RemoteStorageOption FromJson(string jsStr) {
		return JsonSerializer.Deserialize<RemoteStorageOption>(jsStr);
	}

	public RemoteServerAddress GetEmbeddedRemoteServerAddress() => new RemoteServerAddress {
		Type = this.Type,
		Description = this.Description,
		RemoteAddress = this.RemoteAddress,
		Username = this.Username,
		Password = this.Password,
		LDAP = this.LDAP,
		B2 = this.B2,
		Wasabi = this.Wasabi,
		Custom = this.Custom,
		S3 = this.S3,
		AWS = this.AWS,
		Storj = this.Storj,
	};

	public void SetEmbeddedRemoteServerAddress(RemoteServerAddress other){
		this.Type = other.Type;
		this.Description = other.Description;
		this.RemoteAddress = other.RemoteAddress;
		this.Username = other.Username;
		this.Password = other.Password;
		this.LDAP = other.LDAP;
		this.B2 = other.B2;
		this.Wasabi = other.Wasabi;
		this.Custom = other.Custom;
		this.S3 = other.S3;
		this.AWS = other.AWS;
		this.Storj = other.Storj;
	}

}
}
