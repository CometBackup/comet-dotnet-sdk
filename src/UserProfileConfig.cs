// AUTOGENERATED, DO NOT EDIT

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace CometBackup.CometAPI.SDK {
/// <summary>
/// Class <c>UserProfileConfig</c> This is the main data structure for a user's profile.
/// </summary>
public class UserProfileConfig {
	public string Username { get; set; } = string.Empty;
	public string AccountName { get; set; } = string.Empty;
	public string LocalTimezone { get; set; } = string.Empty;
	public string LanguageCode { get; set; } = string.Empty;
	public string OrganizationID { get; set; } = string.Empty;
	public List<string> Emails { get; set; }
	public Dictionary<string, UserCustomEmailSettings> OverrideEmailSettings { get; set; }
	public bool SendEmailReports { get; set; }
	public Dictionary<string, DestinationConfig> Destinations { get; set; }
	public Dictionary<string, SourceConfig> Sources { get; set; }
	public Dictionary<string, BackupRuleConfig> BackupRules { get; set; }
	public Dictionary<string, DeviceConfig> Devices { get; set; }
	public bool IsSuspended { get; set; }
	public long LastSuspended { get; set; }
	public bool AllProtectedItemsQuotaEnabled { get; set; }
	public long AllProtectedItemsQuotaBytes { get; set; }
	public long MaximumDevices { get; set; }
	public long QuotaOffice365ProtectedAccounts { get; set; }
	public string PolicyID { get; set; } = string.Empty;
	public UserPolicy Policy { get; set; }
	public long PasswordFormat { get; set; }
	public string PasswordHash { get; set; } = string.Empty;
	public string PasswordRecovery { get; set; } = string.Empty;
	public bool AllowPasswordLogin { get; set; }
	public bool AllowPasswordAndTOTPLogin { get; set; }
	public long TOTPKeyEncryptionFormat { get; set; }
	public string TOTPKey { get; set; } = string.Empty;
	public bool RequirePasswordChange { get; set; }
	public long CreateTime { get; set; }
	public string CreationGUID { get; set; } = string.Empty;
	public UserServerConfig ServerConfig { get; set; }

	public UserProfileConfig(){ }

	public string ToJson() {
		return JsonSerializer.Serialize(this);
	}

	static public UserProfileConfig FromJson(string jsStr) {
		return JsonSerializer.Deserialize<UserProfileConfig>(jsStr);
	}

}
}
